@model X.PagedList.IPagedList<ObjectInJournal>

@{
    ViewData["Title"] = "Журнал ОБ";
}

<style>
    .group-header {
        background-color: #f8f9fa;
        font-weight: bold;
        border-top: 2px solid #dee2e6;
        border-bottom: 1px solid #dee2e6;
    }

    .group-row {
        border-bottom: 1px solid #dee2e6;
    }

    .last-in-group {
        border-bottom: 2px solid #dee2e6;
    }
</style>

<h1>Журнал ОБ</h1>

<div class="card">
    <div class="card-body">
        <table class="table">
            <thead>
                <tr>
                    <th>Название</th>
                    <th>Серия</th>
                    <th>Срок до архивации (дней)</th>
                    <th style="width: 100px;">Действия</th>
                </tr>
            </thead>
            <tbody>
                @{
                    var groups = Model
                    .OrderBy(j => j.SeriesName)
                    .GroupBy(j => j.SeriesName);

                    foreach (var group in groups)
                    {
                        <tr class="group-header">
                            <td colspan="3">
                                Серия: @(string.IsNullOrEmpty(group.Key) ? "Без серии" : group.Key)
                            </td>
                            <td></td>
                        </tr>

                        var lastIndex = group.Count() - 1;
                        var index = 0;

                        foreach (var item in group.OrderBy(j => j.Name))
                        {
                            <tr class="group-row @(index == lastIndex ? "last-in-group" : "")">
                                <td>@item.Name</td>
                                <td>@item.SeriesName</td>
                                <td>@item.GetAge(item.ArchiveDate)</td>
                                <td>
                                    <button class="btn btn-sm btn-info details-btn"
                                            data-id="@item.Id">
                                        <i class="bi bi-info-circle"></i>
                                    </button>
                                </td>
                            </tr>
                            index++;
                        }
                    }
                }
            </tbody>
        </table>
    </div>
</div>

<div class="d-flex justify-content-center">
    @Html.PagedListPager(
            Model,
            page => Url.Action("Index", new { page }),
            new PagedListRenderOptions
    {
        LiElementClasses = new[] { "page-item" },
        PageClasses = new[] { "page-link" },
        UlElementClasses = new[] { "pagination" },
        MaximumPageNumbersToDisplay = 5
    }
            )
</div>

<!-- Модальное окно свойств -->
<div class="modal fade" id="detailsModal" tabindex="-1">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Свойства образца</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body" id="detailsContent">
                <!-- Контент будет загружен через AJAX -->
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Закрыть</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(function() {
            $('.details-btn').click(function() {
                const id = $(this).data('id');
                $('#detailsContent').load('@Url.Action("Details", "Journal")?id=' + id);
                $('#detailsModal').modal('show');
            });
        });
    </script>
}