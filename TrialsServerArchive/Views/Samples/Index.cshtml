@model X.PagedList.IPagedList<Sample>
@inject SignInManager<ApplicationUser> SignInManager

@{
    ViewData["Title"] = "Образцы";
}

<style>
    .group-header {
        background-color: #f8f9fa;
        font-weight: bold;
        border-top: 2px solid #dee2e6;
        border-bottom: 1px solid #dee2e6;
    }

    .group-row {
        border-bottom: 1px solid #dee2e6;
    }

    .last-in-group {
        border-bottom: 2px solid #dee2e6;
    }
</style>

<h1>Образцы</h1>

@if (SignInManager.IsSignedIn(User))
{
    <div class="mb-3">
        <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#createModal">
            <i class="bi bi-plus-circle"></i> Создать образец
        </button>
        <button class="btn btn-secondary" id="groupBtn" disabled>
            <i class="bi bi-collection"></i> Группировать
        </button>
        <button class="btn btn-success" id="moveToTrialBtn" disabled>
            <i class="bi bi-arrow-right"></i> Перевести в испытанные
        </button>
    </div>
}


<div class="card">
    <div class="card-body">
        <table class="table">
            <thead>
                <tr>
                    @if (SignInManager.IsSignedIn(User))
                    {
                        <th style="width: 40px;">
                            <input type="checkbox" id="selectAll" />
                        </th>
                    }
                    <th>Название</th>
                    <th>Серия</th>
                    <th>Срок (дней)</th>
                    <th style="width: 150px;">Действия</th>
                </tr>
            </thead>
            <tbody>
                @{
                    var groups = Model
                    .OrderBy(s => s.SeriesName)
                    .GroupBy(s => s.SeriesName);

                    foreach (var group in groups)
                    {
                        <tr class="group-header">
                            <td colspan="4">
                                Серия: @(string.IsNullOrEmpty(group.Key) ? "Без серии" : group.Key)
                            </td>
                            <td>
                                <button class="btn btn-sm btn-outline-danger ungroup-btn"
                                        data-series="@group.Key">
                                    <i class="bi bi-x-circle"></i> Удалить серию
                                </button>
                            </td>
                        </tr>

                        var lastIndex = group.Count() - 1;
                        var index = 0;

                        foreach (var item in group.OrderBy(s => s.Name))
                        {
                            <tr class="group-row @(index == lastIndex ? "last-in-group" : "")">
                                @if (SignInManager.IsSignedIn(User))
                                {
                                    <td>
                                        <input type="checkbox" class="rowCheckbox" data-id="@item.Id" />
                                    </td>
                                }
                                <td>@item.Name</td>
                                <td>@item.SeriesName</td>
                                <td>@item.GetAge(DateTime.Today)</td>
                                <td>
                                    <div class="btn-group">
                                        <button class="btn btn-sm btn-info details-btn"
                                                data-id="@item.Id">
                                            <i class="bi bi-info-circle"></i>
                                        </button>
                                        <button class="btn btn-sm btn-warning ungroup-one-btn"
                                                data-id="@item.Id">
                                            <i class="bi bi-x"></i>
                                        </button>
                                        <button class="btn btn-sm btn-danger delete-btn"
                                                data-id="@item.Id">
                                            <i class="bi bi-trash"></i>
                                        </button>
                                    </div>
                                </td>
                            </tr>
                            index++;
                        }
                    }
                }
            </tbody>
        </table>
    </div>
</div>

@if (SignInManager.IsSignedIn(User))
{
    <!-- Модальное окно создания образца -->
    <div class="modal fade" id="createModal" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <form asp-action="CreateSample" method="post">
                    <div class="modal-header">
                        <h5 class="modal-title">Создать образец</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                    </div>
                    <div class="modal-body">
                        <div class="mb-3">
                            <label class="form-label">Название образца</label>
                            <input type="text" class="form-control" name="Name" required>
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Серия</label>
                            <input type="text" class="form-control" name="SeriesName">
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Дата создания</label>
                            <input type="date" class="form-control" name="SampleCreationDate" required>
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Дата производства</label>
                            <input type="date" class="form-control" name="ManufactureDate" required>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Отмена</button>
                        <button type="submit" class="btn btn-primary">Создать</button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <!-- Модальное окно группировки -->
    <div class="modal fade" id="groupModal" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <form asp-action="GroupSamples" method="post">
                    <div class="modal-header">
                        <h5 class="modal-title">Группировать образцы</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                    </div>
                    <div class="modal-body">
                        <input type="hidden" name="ids" id="groupIds">
                        <div class="mb-3">
                            <label class="form-label">Название серии</label>
                            <input type="text" class="form-control" name="seriesName" required>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Отмена</button>
                        <button type="submit" class="btn btn-primary">Группировать</button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <!-- Модальное окно перевода в испытанные -->
    <div class="modal fade" id="trialModal" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <form asp-action="MoveToTrials" method="post">
                    <div class="modal-header">
                        <h5 class="modal-title">Перевод в испытанные</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                    </div>
                    <div class="modal-body">
                        <input type="hidden" name="ids" id="trialIds">
                        <div class="mb-3">
                            <label class="form-label">Оснастка</label>
                            <select class="form-select" name="toolingIds" multiple required size="5">
                                @foreach (var tooling in ViewBag.Toolings)
                                {
                                    <option value="@tooling.Id">@tooling.Name</option>
                                }
                            </select>
                            <small class="form-text text-muted">
                                Удерживайте Ctrl для выбора нескольких элементов
                            </small>
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Дата испытания</label>
                            <input type="date" class="form-control" name="testingDate"
                                   value="@DateTime.Now.ToString("yyyy-MM-dd")" required>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Отмена</button>
                        <button type="submit" class="btn btn-primary">Перевести</button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <!-- Модальное окно свойств -->
    <div class="modal fade" id="detailsModal" tabindex="-1">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Свойства образца</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body" id="detailsContent">
                    <!-- Контент будет загружен через AJAX -->
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Закрыть</button>
                </div>
            </div>
        </div>
    </div>

    <div class="d-flex justify-content-center">
        @Html.PagedListPager(
                Model,
                page => Url.Action("Index", new { page }),
                new PagedListRenderOptions
    {
        LiElementClasses = new[] { "page-item" },
        PageClasses = new[] { "page-link" },
        UlElementClasses = new[] { "pagination" },
        MaximumPageNumbersToDisplay = 5
    }
                )
    </div>

    @section Scripts {
    <script>
        $(function () {
            // Выбор/снятие всех чекбоксов
            $('#selectAll').change(function () {
                $('.rowCheckbox').prop('checked', this.checked);
                updateButtons();
            });

            // Обновление состояния кнопок при изменении выбора
            $('.rowCheckbox').change(updateButtons);

            function updateButtons() {
                const checkedCount = $('.rowCheckbox:checked').length;
                $('#groupBtn').prop('disabled', checkedCount === 0);
                $('#moveToTrialBtn').prop('disabled', checkedCount === 0);
            }

            // Открытие модалки группировки
            $('#groupBtn').click(function () {
                const ids = $('.rowCheckbox:checked').map(function () {
                    return $(this).data('id');
                }).get();
                $('#groupIds').val(ids.join(','));
                $('#groupModal').modal('show');
            });

            // Открытие модалки перевода в испытанные
            $('#moveToTrialBtn').click(function () {
                const ids = $('.rowCheckbox:checked').map(function () {
                    return $(this).data('id');
                }).get();
                $('#trialIds').val(ids.join(','));
                $('#trialModal').modal('show');
            });
        // Обработчики для кнопок действий
             $('.ungroup-one-btn').click(function() {
                 const id = $(this).data('id');
                 if (confirm('Удалить образец из серии?')) {
                     $.post('@Url.Action("RemoveFromSeries", "Samples")', { id: id }, function() {
                         location.reload();
                     });
                 }
             });

             $('.ungroup-btn').click(function() {
                 const series = $(this).data('series');
                 if (confirm(`Удалить все образцы из серии "${series}"?`)) {
                     $.post('@Url.Action("RemoveSeries", "Samples")', { seriesName: series }, function() {
                         location.reload();
                     });
                 }
             });

             $('.delete-btn').click(function() {
                 const id = $(this).data('id');
                 if (confirm('Удалить образец полностью?')) {
                     $.post('@Url.Action("Delete", "Samples")', { id: id }, function() {
                         location.reload();
                     });
                 }
             });

             $('.details-btn').click(function() {
                 const id = $(this).data('id');
                 $('#detailsContent').load('@Url.Action("Details", "Samples")?id=' + id);
                 $('#detailsModal').modal('show');
             });
         });
    </script>
    }
}